/* Rotate array left by k
Input: N = 6, array[] = {3,7,8,9,10,11} , k=3 , left 
Output: 9 10 11 3 7 8
Explanation: Array is rotated to right by 3 position.
 */

public class ProblemsOnArrays {
    public static void reverse(int[] arr,int start,int end)
    {
        while(start<=end)
        {
            int temp=arr[start];
            arr[start]=arr[end];
            arr[end]=temp;
            start++;
            end--;
        }
    }

    public static void main(String[] args) {

        int[] arr={3,7,8,9,10,11};
        int n=arr.length;
        int k=3;
        reverse(arr,0,k-1);
        reverse(arr,k,n-1);
        reverse(arr,0,n-1);
        System.out.println(Arrays.toString(arr));

    }
    }


/* Rotate array right by k
Input: N = 7, array[] = {1,2,3,4,5,6,7} , k=2 , right
Output: 6 7 1 2 3 4 5
Explanation: array is rotated to right by 2 position .
 */

public class ProblemsOnArrays {
    public static void reverse(int[] arr,int start,int end)
    {
        while(start<=end)
        {
            int temp=arr[start];
            arr[start]=arr[end];
            arr[end]=temp;
            start++;
            end--;
        }
    }

    public static void main(String[] args) {

        int[] arr={1,2,3,4,5,6,7};
        int n=arr.length;
        int k=3;
        reverse(arr,0,n-k);
        reverse(arr,n-k+1,n-1);
        reverse(arr,0,n-1);
        System.out.println(Arrays.toString(arr));

    }
    }